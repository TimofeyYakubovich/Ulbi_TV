// простенький класс связного списка
class LinkedList {
    constructor() {
        this.size = 0 // размер самого списка
        this.root = null // корневой элимент
    }

    // функция каторая будет добовлять в список значения
    add(value) {
        if(this.size === 0) { // если размер списка = 0 тогда нодо принициализировать корневой элимент
            this.root = new Node(value)
            this.size += 1; // увеличиваем размер списка на 1 так как у нас уже хронится 1 нода
            return true
        }
        // если в списке уже что то есть
        let node = this.root // создаем переменную node в каторую помещаем корневой элимент
        // в цикле будем крутиться до тех пор пока у текущей ноды есть следующий элимент 
        while (node.next) {
            node = node.next // и прсваиваем этой ноде этот элимент тоесть такая простая итерация
        }
        // после ого как дошли до последнего элимента в списке создаем новую newNode ноду передаем в нее значение value
        let newNode = new Node(value)
        // и узлу до каторого мы доитерировались как ссылку на следующий элимент указваем новую ноду
        node.next = newNode
        this.size += 1; // увеличиваем размер списка на 1
    }

    // функция катрая будет возвращать размер списка
    getSize() {
        return this.size
    }

    // сделаем функцию для того что бы посмотреть что получилось будет выводить список в логи
    print() {
        let result = [] // массив result в него будем добовлять значение из узлов
        let node = this.root // переменная с текущим узлом
        // поаналогии с функцией добавления будем итерироваться в цикле while пока у ноды есть следующий элимент элимент 
        while (node) {
            result.push(node.value) // получаем значение из ноды и добовляем его в result
            node = node.next // переменной node присмаиваем следующий элимент в списке
        }
        console.log(result)
    }
}


// класс для конкретно отдельного взятого узла в классе LinkedList
class Node {
    constructor(value) { // constructor параметром принимает значение
        this.value = value // значение каторое этот узел будет хранить
        this.next = null // ссылка на следующий элимент в списке
    }
}

// используем список создае объект list и добавим в него несколько значений функцией add
const list = new LinkedList()
list.add(5)
list.add(3)
list.add(2)
list.add(5)
list.add(7)

list.print() //посмотрим что получилось