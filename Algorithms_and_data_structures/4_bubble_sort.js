// Пузырьковая сортировка bubbleSort
// один из самых известных алгоритмов сортировки и один из самых не эффективных
// принцип так же в двойном цикле пробегаемся по всму массиву и сравниваем попарно лежащие элименты 
// если следующщий элимент массива меньше чем предыдущий меняем их местами
// получается своего рода всплыте самый большой элимент с каждой итерацией потехоньку всплывает наверх Пузырьковая сортировка
const arr = [12,3,2,5,6,8,1,9,4,2,1,2,9,6,4,1,7,-1,-5,23,6,2,35,6,3,32]
let count = 0

function bubbleSort(array) {
    // создаем 2 цикла оба будут пробегаться по всей длине массива
    for (let i = 0; i < array.length; i++) {
        for (let j = 0; j < array.length; j++) {
            if (array[j + 1] < array[j]) { // если элимент текущей итерации больше чем тот каторый идет после него то меняем их местами
                let tmp = array[j]         // в tmp ложим элимент текущей итерации
                array[j] = array[j+1]      // в элимент текущей итерации ложим элимент каторый идет следующим
                array[j+1] = tmp           // в элимент каторый идет следующим ложим элимент текущей итерации
            }
            count+=1    
        }
    }
    return array
}

console.log('length', arr.length)
console.log(bubbleSort(arr))
console.log('count = ', count)

// количество итераций равно квадрату длины массива тоесть сложность этого алгоритма так же 0(n*n) но сдесь нет этого коэффициента 1/2 каторый 
// был в сортировке выбора
// тоесть этот алгоритм менее эффективней но сложность у них одинаковая