const ws = require('ws')
// создаем вебсокет сервер
const wss = new ws.Server({
    // параметром передаем объект с конфигурацией
    port: 5000,
}, () => console.log(`server started on port 5000`)) // 2 параметр кобек катрый отработает в случае успешног запуска сервера


// обращаемся к серверу и подписываемся на событие подключение когда какой то клиент подключается к вебсокет серверу будет отрабатываь
// это событие
// 2 аргументом передаем колбек connection каторый на это событие будет отрабатывать он параметром принимает вебсокет ws
// это какое то 1 конкретное подключение 1 конкретный пользователь на него вешаем слушатил события 'message' и параметром сразу 
// же передаем колбек теперь когда какое то сообщение будет отправлено будет отрабатывать этот колбек
wss.on('connection', function connection(ws) {
    // с помощью функции send можно на клиент сразу отправить сообщение но этот функционал реализуем подругому
    // ws.send('Пользователь ulbi tv успешно подключился')

    // если делать приватные комнаты в чате то в ммоент подлючения можно присваивать id для конкретного ws
    // ws.id = Date.now() // этот id будет являься id комнаты его передаем в функцию broadcastMessage широковещательную расслку
    // и там проверяем если клиент обладает таким то id то тогда отправляем ему сообщене

    ws.on('message', function(message) {
        // так как обмен сообщения происходит в строковом формате сразу же из json строки перегоняем сообщение в json объект
        message = JSON.parse(message)
        // switch case будет отрабатываь поразному в зависимости от event в сообщении
        switch (message.event) {
            case 'message':
                // если отработал кейс message просто отправляем всем сообщение но в данном случае мы отправим сообщение только тому пользователю
                // ws.send() // катоырй его и отправил потому что этот ws это одно подключение
                // поэтому реализуем функцию broadcastMessage каторая будет делать широковещательную расслку
                broadcastMessage(message)
                break;
            case 'connection': // в connection тоже самое просто для примера логика может быть другая
                broadcastMessage(message)
                break;
        }
    })
})

// реализуем функцию broadcastMessage каторая будет делать широковещательную расслку отправлять сообщения всем подключенным на данный момент 
// клиентам
function broadcastMessage(message, id) {
    // обращаемся к вебсокет серверу wss и у него есть поле clients это все клиенты у аторых щас установлено подключение
    wss.clients.forEach(client => { // каждый client сдесь является вебсокетом
        // if (client.id === id) { // в таком случае сообщение получат только те участники чата каорые находятся в нужней для нас комнате
            // сдесь просто отправляем клиенту собщение перегоняем его в json строку
            client.send(JSON.stringify(message))
        // }
    })
}


// само сообщение будет выглядить так
// const message = {
//     event: 'message/connection', // поле event с каким то событием message или connection
//     id: 123,
//     data: '21.01.2021', // дата создания
//     username: 'Ulbi tv', // имя автора
//     message: 'здаров'  // и само сообщение
// }