// клиент сервреное взаимодействие Основы HTTP
// RESTfull API
// CRUD операции
// Работа с БД
// Postman

// клиент сервреное взаимодействие
// есть несколько человек каторые каторые используют какое то веб приложение чаще всего веб приложение работает с HTTP протоколом и открывается
// через браузер
// в тоже время есть какое о серверное приложение с базой данных каторое мы будем делать

// когда пользователь совершает какое то действие отправляет камуто сообщение или открывает аватарку из его браузера отправляется запрпос на сервер
// сервер производит какие то операции например сохроняет отправленое пользователем сообщение в БД после чего на клиент отправляется ответ от сревера
// и только после этого пользователь видет свое сообщение в чате и остальные пользователи его так же видят

// HTTP это протокл приклодного уровня
// Методы HTTP запроса
// GET - получение
// POST - создание
// PUT - редактирование
// DELETE - Удаление

// у HTTP запроса есть заголоки в каторых уазывается некаторая и тело запроса в теле запроса передаются какие то данные
// после ого как запрос дошел до сервера можно вернуть соответствующий статус код

// HTTP статус код
// 2xx - success // зпрос оработал правильно
// Зхх - redirect
// 4xx - client error клиентсая шибка например перешли по несущесвтующему адресу
// 5xx - server error

// каждый раз когда откррывается какой то вебсайт в браузере отправляется HTTP GET запрос и сервер вам возвращает HTML страницу каторая уже
// видна в браузере

// самый чаасто испльзуемый архитектурный подход к построению бекенда это REST API
// REST представляет из себя стиль архитектуры програмнго обеспечения для построения распределенных маштабируемых веб сервисов
// REST сервисы поозволяют лучшим на данный момент образом использовать HTTP протокл
// REST всегда подразумевает клиент серверное взаимодействие
// в подовляющем большенстве случаев формат данных ежду клиентом и сервером является JSON 

// POST    http://server.com/users  С - create
// GET     http://server.com/users  R - read
// PUT     http://server.com/users  U - update
// DELETE  http://server.com/users  D - deletev






